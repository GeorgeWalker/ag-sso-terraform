name: Client Installtion Json

on:
  workflow_dispatch:
    inputs:
      client-id:
        description: 'Client ID'
        required: true
      env:
        description: 'Environment'
        required: true
      realm:
        description: 'Realm'
        required: true

jobs:
  installtion-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Display Inputs
        if: github.actor  == 'sookeke' || github.actor == 'lee.wright' 
        run: |
          echo "Client ID: ${{ github.event.inputs.client-id }}"
          echo "Environment: ${{ github.event.inputs.env }}"
          echo "Realm: ${{ github.event.inputs.realm }}"
      - name: Get Client Installation JSON
        id: client_installation
        if: github.actor  == 'sookeke' || github.actor == 'lee.wright' 
        run: |
          client_id=${{ github.event.inputs.client-id }}
          env=${{ github.event.inputs.env }}
          realm=${{ github.event.inputs.realm }}
          ls
          ./get_client_installation_json.sh ${{ github.event.inputs.client-id }} ${{ github.event.inputs.env }} ${{ github.event.inputs.realm }} ${{secrets.TF_VAR_DEV_CLIENT_SECRET}}> output_file.txt
          cat output_file.txt
          if grep -q "Invalid http_code" output_file.txt; then
            echo "Invalid http_code in the output. Failing the workflow."
            cat output_file.txt
            exit 1
          fi
      - name: Get Email Access Token 
        if: steps.client_installation.outcome == 'success'
        id: token
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://dev.loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token'
          method: 'POST'
          username: ${{ secrets.CHES_DEV_CLIENT_ID}}
          password: ${{ secrets.CHES_DEV_CLIENT_SECRET }}
          customHeaders: '{"Content-Type": "application/x-www-form-urlencoded"}'
          data: '{"grant_type": "client_credentials"}'
      - name: Show Response
        run: |
            echo ${{ steps.token.outputs.response }}
            echo ${{ steps.token.outputs.headers }}
            echo ${{ fromJson(steps.token.outputs.response).access_token }}
      
          

